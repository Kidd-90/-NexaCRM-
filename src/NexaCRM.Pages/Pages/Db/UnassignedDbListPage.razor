@page "/db/distribution/unassigned"
@using System.Collections.Generic
@using System.Linq
@using Microsoft.Extensions.Localization
@using NexaCRM.Pages.Components.Shared
@using NexaCRM.Pages.Pages.Db.Shared
@using NexaCRM.Services.Admin.Models.Db

@inject IStringLocalizer<DbStatus> StatusLocalizer

@inherits DbCustomerListPageBase

<PageTemplate PageTitle="미배정 DB"
              PageDescription="배정 대기 중인 고객 DB를 선택하여 담당자에게 전달하세요."
              BodyCssClass="space-y-6"
              DisableCardSurface="true">
    <LeadingVisual>
        <span class="text-3xl" aria-hidden="true">📤</span>
    </LeadingVisual>

    <HeaderActions>
        <button type="button"
                class="inline-flex items-center gap-2 rounded-lg border border-[var(--border-color)] bg-[var(--surface-bg)] px-4 py-2 text-sm font-medium shadow-sm transition hover:bg-[var(--primary-bg)] disabled:opacity-60"
                @onclick="RefreshAsync"
                disabled="@IsLoading">
            <span aria-hidden="true">🔄</span>
            새로고침
        </button>
    </HeaderActions>

    <ChildContent>

    @if (IsLoading)
    {
        <div class="themed-surface-card border border-[var(--border-color)] rounded-xl p-10 text-center text-sm themed-text-secondary">
            데이터를 불러오는 중입니다...
        </div>
    }
    else if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="rounded-xl border border-rose-200 bg-rose-50 p-6 text-sm text-rose-600">
            @ErrorMessage
        </div>
    }
    else if (Customers.Count == 0)
    {
        <div class="rounded-xl border border-dashed border-[var(--border-color)] bg-[var(--surface-bg)] p-10 text-center text-sm themed-text-secondary">
            미배정 상태의 DB가 없습니다.
        </div>
    }
    else
    {
        <div class="themed-surface-card border border-[var(--border-color)] rounded-xl shadow-sm">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-[var(--border-color)] text-left text-sm">
                    <thead class="bg-[var(--surface-bg-muted)] text-xs uppercase tracking-wide themed-text-secondary">
                        <tr>
                            <th class="px-6 py-3">고객명</th>
                            <th class="px-6 py-3">연락처</th>
                            <th class="px-6 py-3">상태</th>
                            <th class="px-6 py-3 text-right">작업</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-[var(--border-color)]">
                        @foreach (var customer in Customers.OrderBy(c => c.CustomerName))
                        {
                            <tr>
                                <td class="px-6 py-4 font-medium">@customer.CustomerName</td>
                                <td class="px-6 py-4">@customer.ContactNumber</td>
                                <td class="px-6 py-4 @DbStatusCss.GetStatusTextClass(customer.Status)">@StatusLocalizer[customer.Status.ToString()]</td>
                                <td class="px-6 py-4 text-right">
                                    <button type="button" class="rounded-lg bg-[var(--accent-primary)] px-3 py-1 text-sm font-semibold text-white shadow-sm hover:bg-[color-mix(in srgb,var(--accent-primary) 90%,white 10%)]" @onclick="() => NavigateToAssign(customer.ContactId)">배정하기</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    </ChildContent>
</PageTemplate>

@code {
    protected override Task<IEnumerable<DbCustomer>> FetchCustomersAsync()
        => DbDataService.GetUnassignedDbListAsync();

    private void NavigateToAssign(int contactId)
    {
        NavigationManager.NavigateTo($"/db/distribution/assign/{contactId}");
    }
}
