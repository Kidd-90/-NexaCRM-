@page "/db/customer/starred"
@using System.Collections.Generic
@using System.Linq
@using Microsoft.Extensions.Localization
@using NexaCRM.Pages.Components.Shared
@using NexaCRM.Pages.Pages.Db.Shared
@using NexaCRM.Services.Admin.Models.Db

@inject IStringLocalizer<DbStatus> StatusLocalizer

@inherits AgentDbCustomerListPageBase

<PageTemplate PageTitle="관심 DB 목록"
              PageDescription="중요 표시한 고객 DB를 집중 관리하세요."
              BodyCssClass="space-y-6"
              DisableCardSurface="true">
    <LeadingVisual>
        <span class="text-3xl" aria-hidden="true">⭐</span>
    </LeadingVisual>

    <HeaderActions>
        <button type="button"
                class="inline-flex items-center gap-2 rounded-lg border border-[var(--border-color)] bg-[var(--surface-bg)] px-4 py-2 text-sm font-medium shadow-sm transition hover:bg-[var(--primary-bg)] disabled:opacity-60"
                @onclick="RefreshAsync"
                disabled="@IsLoading">
            <span aria-hidden="true">🔄</span>
            새로고침
        </button>
    </HeaderActions>

    @if (IsLoading)
    {
        <div class="themed-surface-card border border-[var(--border-color)] rounded-xl p-10 text-center text-sm themed-text-secondary">
            데이터를 불러오는 중입니다...
        </div>
    }
    else if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="rounded-xl border border-rose-200 bg-rose-50 p-6 text-sm text-rose-600">
            @ErrorMessage
        </div>
    }
    else if (Customers.Count == 0)
    {
        <div class="rounded-xl border border-dashed border-[var(--border-color)] bg-[var(--surface-bg)] p-10 text-center text-sm themed-text-secondary">
            관심 표시한 DB가 없습니다.
        </div>
    }
    else
    {
        <div class="themed-surface-card border border-[var(--border-color)] rounded-xl shadow-sm">
            <div class="hidden overflow-x-auto md:block">
                <table class="min-w-full divide-y divide-[var(--border-color)] text-left text-sm">
                    <thead class="bg-[var(--surface-bg-muted)] text-xs uppercase tracking-wide themed-text-secondary">
                        <tr>
                            <th class="px-6 py-3">고객명</th>
                            <th class="px-6 py-3">연락처</th>
                            <th class="px-6 py-3">DB 상태</th>
                            <th class="px-6 py-3">최종 컨택</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-[var(--border-color)]">
                        @foreach (var customer in Customers.OrderByDescending(c => c.LastContactDate))
                        {
                            <tr class="cursor-pointer transition hover:bg-[var(--primary-bg)]/40" @onclick="() => NavigateToContact(customer.ContactId)">
                                <td class="px-6 py-4 font-medium">@customer.CustomerName</td>
                                <td class="px-6 py-4">@customer.ContactNumber</td>
                                <td class="px-6 py-4 @DbStatusCss.GetStatusTextClass(customer.Status)">@StatusLocalizer[customer.Status.ToString()]</td>
                                <td class="px-6 py-4">@customer.LastContactDate.ToShortDateString()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="space-y-4 border-t border-[var(--border-color)] p-4 md:hidden">
                @foreach (var customer in Customers.OrderByDescending(c => c.LastContactDate))
                {
                    <article class="rounded-xl border border-[var(--border-color)] bg-[var(--surface-bg)] p-4 shadow-sm" @onclick="() => NavigateToContact(customer.ContactId)">
                        <header class="mb-3 flex items-center justify-between">
                            <h3 class="text-base font-semibold themed-text-primary">@customer.CustomerName</h3>
                            <span class="text-lg text-amber-400">★</span>
                        </header>
                        <dl class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <dt class="text-[var(--text-muted)]">연락처</dt>
                                <dd>@customer.ContactNumber</dd>
                            </div>
                            <div class="flex justify-between">
                                <dt class="text-[var(--text-muted)]">DB 상태</dt>
                                <dd class="@DbStatusCss.GetStatusTextClass(customer.Status)">@StatusLocalizer[customer.Status.ToString()]</dd>
                            </div>
                            <div class="flex justify-between">
                                <dt class="text-[var(--text-muted)]">최종 컨택</dt>
                                <dd>@customer.LastContactDate.ToShortDateString()</dd>
                            </div>
                        </dl>
                    </article>
                }
            </div>
        </div>
    }
</PageTemplate>

@code {
    protected override async Task<IEnumerable<DbCustomer>> FetchCustomersAsync()
    {
        var agentName = await ResolveAgentNameAsync();
        if (string.IsNullOrWhiteSpace(agentName))
        {
            return Array.Empty<DbCustomer>();
        }

        return await DbDataService.GetStarredDbListAsync(agentName);
    }

    private void NavigateToContact(int contactId)
    {
        NavigationManager.NavigateTo($"/contacts/{contactId}");
    }
}
