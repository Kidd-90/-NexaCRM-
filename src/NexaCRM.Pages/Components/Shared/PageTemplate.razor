@namespace NexaCRM.Pages.Components.Shared
@using Microsoft.AspNetCore.Components
@using System.Collections.Generic

<section class="space-y-6" aria-labelledby="@_titleElementId" aria-describedby="@DescriptionElementId" @attributes="AdditionalAttributes">
    <header class="space-y-4">
        <div class="flex flex-col gap-4 md:flex-row md:items-start md:justify-between">
            <div class="flex flex-col gap-3 md:gap-4">
                <div class="flex flex-wrap items-start gap-3 md:gap-4">
                    @if (LeadingVisual is not null)
                    {
                        <div class="flex h-12 w-12 items-center justify-center rounded-xl themed-surface-card border border-[var(--border-color)] text-2xl" aria-hidden="true">
                            @LeadingVisual
                        </div>
                    }

                    <div class="space-y-2">
                        <h1 id="@_titleElementId" class="text-3xl font-bold themed-text-primary">@PageTitle</h1>
                        @if (HasDescription)
                        {
                            <div id="@DescriptionElementId" class="space-y-2 text-base themed-text-secondary">
                                @if (!string.IsNullOrWhiteSpace(PageDescription))
                                {
                                    <p>@PageDescription</p>
                                }

                                @DescriptionContent
                            </div>
                        }
                    </div>
                </div>

                @if (MetaContent is not null)
                {
                    <div class="flex flex-wrap items-center gap-2 text-sm themed-text-secondary">
                        @MetaContent
                    </div>
                }
            </div>

            @if (HeaderActions is not null)
            {
                <div class="flex flex-wrap justify-end gap-2">
                    @HeaderActions
                </div>
            }
        </div>
    </header>

    @if (ChildContent is not null)
    {
        if (DisableCardSurface)
        {
            <div class="@BodyCssClass">
                @ChildContent
            </div>
        }
        else
        {
            <div class="@BodyContainerCssClass">
                @ChildContent
            </div>
        }
    }
</section>

@code {
    [Parameter]
    public string PageTitle { get; set; } = "Untitled Page";

    [Parameter]
    public string? PageDescription { get; set; }

    [Parameter]
    public RenderFragment? HeaderActions { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? LeadingVisual { get; set; }

    [Parameter]
    public RenderFragment? MetaContent { get; set; }

    [Parameter]
    public RenderFragment? DescriptionContent { get; set; }

    [Parameter]
    public bool DisableCardSurface { get; set; }

    [Parameter]
    public string BodyCssClass { get; set; } = string.Empty;

    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; set; }

    private readonly string _titleElementId = $"page-title-{Guid.NewGuid():N}";
    private readonly string _descriptionElementId = $"page-description-{Guid.NewGuid():N}";

    private bool HasDescription => !string.IsNullOrWhiteSpace(PageDescription) || DescriptionContent is not null;

    private string? DescriptionElementId => HasDescription ? _descriptionElementId : null;

    private string BodyContainerCssClass
    {
        get
        {
            const string baseClass = "themed-surface-card p-6 rounded-xl border border-[var(--border-color)] shadow-sm";
            return string.IsNullOrWhiteSpace(BodyCssClass) ? baseClass : string.Join(' ', baseClass, BodyCssClass);
        }
    }
}
