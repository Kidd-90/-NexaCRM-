@namespace NexaCRM.Pages.Components.Shared
@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<LoadingScreen />

@code {
    private static readonly NavigationOptions LoginNavigationOptions = new() { ReplaceHistoryEntry = true };
    private bool _hasRedirected;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        await RedirectToLoginAsync();
    }

    private async Task RedirectToLoginAsync()
    {
        if (_hasRedirected)
        {
            return;
        }

        _hasRedirected = true;

        try
        {
            var relative = Navigation.ToBaseRelativePath(Navigation.Uri);
            if (relative.StartsWith("login", StringComparison.OrdinalIgnoreCase))
            {
                return;
            }

            var target = BuildTargetUri();
            await JSRuntime.InvokeVoidAsync("console.info", "Redirecting to login page", target);
            Navigation.NavigateTo(target, LoginNavigationOptions);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "RedirectToLogin failure", ex.Message);
            Navigation.NavigateTo("/login", LoginNavigationOptions);
        }
    }

    private string BuildTargetUri()
    {
        var currentUri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var queryAndFragment = string.Concat(currentUri.Query, currentUri.Fragment);
        return string.IsNullOrEmpty(queryAndFragment)
            ? "/login"
            : $"/login{queryAndFragment}";
    }
}
