@inherits LayoutComponentBase
@using NexaCRM.WebClient.Shared
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="page">
    <!-- Í≥†Ï†ïÎêú ÌñÑÎ≤ÑÍ±∞ Î≤ÑÌäº - Î™®Î∞îÏùºÏóêÏÑúÎßå Î≥¥Ïù¥ÎèÑÎ°ù -->
    <button title="Navigation menu" class="floating-menu-toggle mobile-only" @onclick="ToggleNavMenu">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="3" y1="6" x2="21" y2="6"></line>
            <line x1="3" y1="12" x2="21" y2="12"></line>
            <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
    </button>
    
    <!-- Theme Toggle Button - Î°úÍ∑∏Ïù∏ ÌéòÏù¥ÏßÄÏóêÏÑúÎßå Î≥¥Ïù¥ÎèÑÎ°ù -->
    @if (IsLoginPage())
    {
        <button title="Toggle theme" class="theme-toggle-button mobile-login-only" data-theme-toggle aria-label="Switch theme">
            <span class="theme-light-icon">üåû</span>
            <span class="theme-dark-icon">üåô</span>
        </button>
    }
    else
    {
        <!-- Îã§Î•∏ ÌéòÏù¥ÏßÄÏóêÏÑúÎäî Îç∞Ïä§ÌÅ¨ÌÜ±ÏóêÏÑúÎßå ÌÖåÎßà Î≤ÑÌäº ÌëúÏãú -->
        <button title="Toggle theme" class="theme-toggle-button desktop-only" data-theme-toggle aria-label="Switch theme">
            <span class="theme-light-icon">üåû</span>
            <span class="theme-dark-icon">üåô</span>
        </button>
    }
    
    <div class="sidebar">
        <NavMenu />
    </div>
    <div class="mobile-overlay" @onclick="() => {}"></div>
    <main>
        <article class="content px-4 page-fade-enter">
            @Body
        </article>
    </main>
    

</div>

@code {
    private bool collapseNavMenu = true;

    private bool IsLoginPage()
    {
        var uri = NavigationManager.Uri;
        return uri.Contains("/login") || uri.Contains("/Login") || uri.EndsWith("/");
    }

    private async Task ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        // JavaScript Ìï®Ïàò Ìò∏Ï∂úÌïòÏó¨ UI ÏóÖÎç∞Ïù¥Ìä∏
        await JSRuntime.InvokeVoidAsync("window.navigationHelper.toggleMenu", collapseNavMenu);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Ï¥àÍ∏∞ Î†åÎçîÎßÅ ÌõÑ JavaScript Ï¥àÍ∏∞Ìôî
            await JSRuntime.InvokeVoidAsync("window.navigationHelper.setupOverlayHandler");
            // Ï¥àÍ∏∞ ÏÉÅÌÉúÎ•º ÌôïÏã§Ìûà ÏÑ§Ï†ï (Î©îÎâ¥ Îã´Ìûå ÏÉÅÌÉú)
            await JSRuntime.InvokeVoidAsync("window.navigationHelper.toggleMenu", true);
            
            // ÌÖåÎßà ÌÜ†Í∏Ä ÏïÑÏù¥ÏΩò Ï¥àÍ∏∞Ìôî
            await JSRuntime.InvokeVoidAsync("updateMainThemeToggleIcon");
        }
    }
}

<script>
    // Update main theme toggle button icons based on current theme
    function updateMainThemeToggleIcon() {
        const themeToggle = document.querySelector('.theme-toggle-button');
        if (!themeToggle) return;
        
        const lightIcon = themeToggle.querySelector('.theme-light-icon');
        const darkIcon = themeToggle.querySelector('.theme-dark-icon');
        
        if (!lightIcon || !darkIcon) return;
        
        // Get current theme from document attribute or localStorage
        const currentTheme = document.documentElement.getAttribute('data-theme') || 
                           localStorage.getItem('nexacrm-theme-preference') || 
                           'light';
        
        // Get system theme if theme is set to auto
        let effectiveTheme = currentTheme;
        if (currentTheme === 'auto') {
            effectiveTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        }
        
        // Update icon visibility based on effective theme
        if (effectiveTheme === 'dark') {
            lightIcon.style.display = 'inline';
            darkIcon.style.display = 'none';
            themeToggle.setAttribute('aria-label', 'Switch to light theme');
        } else {
            lightIcon.style.display = 'none';
            darkIcon.style.display = 'inline';
            themeToggle.setAttribute('aria-label', 'Switch to dark theme');
        }
        
        console.log('Main theme toggle icon updated for theme:', effectiveTheme);
    }

    // Ensure theme toggle works on main layout
    document.addEventListener('DOMContentLoaded', function() {
        // Immediately update theme icon
        updateMainThemeToggleIcon();
        
        // Wait a bit for all scripts to load, then setup listeners
        setTimeout(function() {
            if (window.themeManager && window.themeManager.setupThemeToggleListeners) {
                window.themeManager.setupThemeToggleListeners();
                console.log('Theme toggle listeners setup for main layout');
            }
            
            // Update icon again after theme manager is initialized
            setTimeout(updateMainThemeToggleIcon, 100);
        }, 500);
    });
    
    // Also setup on page show (for browser back/forward navigation)
    window.addEventListener('pageshow', function() {
        updateMainThemeToggleIcon();
        
        setTimeout(function() {
            if (window.themeManager && window.themeManager.setupThemeToggleListeners) {
                window.themeManager.setupThemeToggleListeners();
            }
            updateMainThemeToggleIcon();
        }, 100);
    });
    
    // Listen for theme changes to update icon
    window.addEventListener('themeChanged', function() {
        setTimeout(updateMainThemeToggleIcon, 50);
    });
    
    // Listen for system theme changes (for auto mode)
    if (window.matchMedia) {
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function() {
            const currentTheme = localStorage.getItem('nexacrm-theme-preference') || 'auto';
            if (currentTheme === 'auto') {
                setTimeout(updateMainThemeToggleIcon, 50);
            }
        });
    }
    
    // Listen for Blazor navigation events to re-update theme toggle icons
    window.addEventListener('blazorNavigated', function() {
        setTimeout(updateMainThemeToggleIcon, 100);
    });
    
    // Make function globally available
    window.updateMainThemeToggleIcon = updateMainThemeToggleIcon;

    // Also make it available through theme manager
    if (window.themeManager) {
        window.themeManager.updateMainThemeToggleIcon = updateMainThemeToggleIcon;
    }
</script>

<style>
/* Mobile/Desktop visibility classes */
@@media (max-width: 768px) {
    /* Hide on mobile */
    .desktop-only {
        display: none !important;
    }
    
    /* Show on mobile */
    .mobile-only {
        display: block !important;
    }
    
    /* Show only on mobile for login page */
    .mobile-login-only {
        display: block !important;
    }
}

@@media (min-width: 769px) {
    /* Show on desktop */
    .desktop-only {
        display: block !important;
    }
    
    /* Hide on desktop */
    .mobile-only {
        display: none !important;
    }
    
    /* Hide on desktop for login-only theme button */
    .mobile-login-only {
        display: none !important;
    }
}

/* Ensure theme toggle button positioning works on desktop - positioned top right but lower than mobile hamburger */
.theme-toggle-button.desktop-only {
    position: fixed;
    top: 4rem;
    right: 1.5rem;
    width: var(--touch-target-min, 44px);
    height: var(--touch-target-min, 44px);
    border: 1px solid var(--border-color, #e5e7eb);
    border-radius: 12px;
    background-color: var(--surface-color, #f9fafb);
    color: var(--text-primary, #111827);
    cursor: pointer;
    z-index: 10001;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.3rem;
    transition: all var(--transition-fast, 0.15s ease);
    box-shadow: 0 4px 12px var(--shadow-light, rgba(0, 0, 0, 0.12));
    -webkit-tap-highlight-color: transparent;
    user-select: none;
    backdrop-filter: blur(10px);
}

.theme-toggle-button.desktop-only:hover {
    background-color: var(--hover-overlay, rgba(59, 130, 246, 0.15));
    transform: scale(1.05);
    box-shadow: 0 4px 12px var(--shadow-medium, rgba(0, 0, 0, 0.12));
}

/* Theme toggle button for mobile login page only */
.theme-toggle-button.mobile-login-only {
    position: fixed;
    top: 4rem;
    right: 1.5rem;
    width: var(--touch-target-min, 44px);
    height: var(--touch-target-min, 44px);
    border: 1px solid var(--border-color, #e5e7eb);
    border-radius: 12px;
    background-color: var(--surface-color, #f9fafb);
    color: var(--text-primary, #111827);
    cursor: pointer;
    z-index: 10001;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.3rem;
    transition: all var(--transition-fast, 0.15s ease);
    box-shadow: 0 4px 12px var(--shadow-light, rgba(0, 0, 0, 0.12));
    -webkit-tap-highlight-color: transparent;
    user-select: none;
    backdrop-filter: blur(10px);
}

.theme-toggle-button.mobile-login-only:hover {
    background-color: var(--hover-overlay, rgba(59, 130, 246, 0.15));
    transform: scale(1.05);
    box-shadow: 0 4px 12px var(--shadow-medium, rgba(0, 0, 0, 0.12));
}

/* Navigation menu button styling for mobile - positioned on the right */
.floating-menu-toggle.mobile-only {
    position: fixed;
    top: 1rem;
    right: 1rem;
    width: var(--touch-target-min, 48px);
    height: var(--touch-target-min, 48px);
    border: none;
    border-radius: 12px;
    background-color: var(--surface-color, #ffffff);
    color: var(--text-primary, #111827);
    cursor: pointer;
    z-index: 10002;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition-fast, 0.15s ease);
    box-shadow: 0 4px 12px var(--shadow-light, rgba(0, 0, 0, 0.12));
    -webkit-tap-highlight-color: transparent;
    user-select: none;
    backdrop-filter: blur(10px);
}

.floating-menu-toggle.mobile-only:hover {
    background-color: var(--hover-overlay, rgba(59, 130, 246, 0.15));
    transform: scale(1.05);
}

.floating-menu-toggle.mobile-only:active {
    transform: scale(0.98);
}
</style>
