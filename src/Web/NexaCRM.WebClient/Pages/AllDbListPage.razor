@page "/db/customer/all"
@attribute [Authorize(Roles = "Manager")]

@using Microsoft.AspNetCore.Components.Authorization
@using NexaCRM.WebClient.Models.Db
@using NexaCRM.WebClient.Services.Interfaces
@inject IDbDataService DbDataService
@inject IStringLocalizer<AllDbListPage> Localizer
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IStringLocalizer<DbStatus> StatusLocalizer
<div class="container-fluid mt-4">
    <h1 class="mb-4">@Localizer["Title"]</h1>

    <div class="mb-3">
        <input type="text" class="form-control" placeholder='@Localizer["Search"]' @bind="searchTerm" @oninput="OnFilterInput" />
    </div>

    @if (customers == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <!-- Desktop View -->
        <div class="table-responsive desktop-table-view">
            <table class="table table-striped table-hover">
                <thead class="table-light">
                    <tr>
                        <th>@Localizer["CustomerName"]</th>
                        <th>@Localizer["Contact"]</th>
                        <th>@Localizer["AssignedTo"]</th>
                        <th>@Localizer["AssignedDate"]</th>
                        <th>@Localizer["Status"]</th>
                        <th>@Localizer["LastContact"]</th>
                        <th>@Localizer["Starred"]</th>
                        <th>@Localizer["Assigner"]</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var customer in filteredCustomers)
                    {
                        <tr @onclick="() => NavigateToContact(customer.ContactId)">
                            <td>@customer.CustomerName</td>
                            <td>@customer.ContactNumber</td>
                            <td>@customer.AssignedTo</td>
                            <td>@customer.AssignedDate.ToShortDateString()</td>
                            <td>@StatusLocalizer[customer.Status.ToString()]</td>
                            <td>@customer.LastContactDate.ToShortDateString()</td>
                            <td>@(customer.IsStarred ? "★" : "")</td>
                            <td>@customer.Assigner</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Mobile View -->
        <div class="mobile-card-view">
            @foreach (var customer in filteredCustomers)
            {
                <div class="customer-card" @onclick="() => NavigateToContact(customer.ContactId)">
                    <h5>
                        @customer.CustomerName
                        @if(customer.IsStarred)
                        {
                            <span style="color: #ffc107;">★</span>
                        }
                    </h5>
                    <div class="card-info-row">
                        <span class="card-info-label">@Localizer["Contact"]</span>
                        <span class="card-info-value">@customer.ContactNumber</span>
                    </div>
                     <div class="card-info-row">
                        <span class="card-info-label">@Localizer["AssignedTo"]</span>
                        <span class="card-info-value">@customer.AssignedTo</span>
                    </div>
                    <div class="card-info-row">
                        <span class="card-info-label">@Localizer["Status"]</span>
                        <span class="card-info-value">@StatusLocalizer[customer.Status.ToString()]</span>
                    </div>
                    <div class="card-info-row">
                        <span class="card-info-label">@Localizer["LastContact"]</span>
                        <span class="card-info-value">@customer.LastContactDate.ToShortDateString()</span>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private IEnumerable<DbCustomer> customers;
    private IEnumerable<DbCustomer> filteredCustomers;
    private string searchTerm = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        customers = await DbDataService.GetAllDbListAsync();
        filteredCustomers = customers;
    }

    private void OnFilterInput(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? string.Empty;
        FilterCustomers();
    }

    private void FilterCustomers()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            filteredCustomers = customers;
        }
        else
        {
            filteredCustomers = customers.Where(c => c.CustomerName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));
        }
    }

    private void NavigateToContact(int contactId)
    {
        NavigationManager.NavigateTo($"/contacts/{contactId}");
    }
}
