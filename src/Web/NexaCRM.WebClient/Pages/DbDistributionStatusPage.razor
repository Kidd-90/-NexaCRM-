@page "/db/distribution/status"
@attribute [Authorize(Roles = "Manager")]

@using NexaCRM.WebClient.Models.Db
@using NexaCRM.WebClient.Services.Interfaces

@inject IDbDataService DbDataService

<div class="container-fluid mt-4">
    <h1 class="mb-4">DB 분배 현황</h1>
    <p class="text-muted mb-4">팀 전체의 DB 분배 이력 및 현황을 조회합니다.</p>

    @if (customers == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <!-- Chart Section -->
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">DB 상태별 현황</h5>
                <div class="d-flex justify-content-around p-3">
                    @foreach (var status in statusCounts)
                    {
                        <div class="text-center">
                            <h6 class="mb-0">@status.Key</h6>
                            <div class="fs-2 fw-bold">@status.Value</div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <h3 class="h5 mb-3">전체 목록</h3>
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-light">
                    <tr>
                        <th>고객명</th>
                        <th>연락처</th>
                        <th>담당자</th>
                        <th>분배일</th>
                        <th>DB 상태</th>
                        <th>최종 컨택일</th>
                        <th>액션</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var customer in customers)
                    {
                        <tr>
                            <td>@customer.CustomerName</td>
                            <td>@customer.ContactNumber</td>
                            <td>@customer.AssignedTo</td>
                            <td>@customer.AssignedDate.ToShortDateString()</td>
                            <td>@customer.Status</td>
                            <td>@customer.LastContactDate.ToShortDateString()</td>
                            <td>
                                <button class="btn btn-secondary btn-sm me-1">재분배</button>
                                <button class="btn btn-danger btn-sm">회수</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private IEnumerable<DbCustomer> customers;
    private Dictionary<DbStatus, int> statusCounts = new Dictionary<DbStatus, int>();

    protected override async Task OnInitializedAsync()
    {
        customers = await DbDataService.GetDbDistributionStatusAsync();
        if (customers != null)
        {
            ProcessDataForChart();
        }
    }

    private void ProcessDataForChart()
    {
        statusCounts = customers
            .GroupBy(c => c.Status)
            .ToDictionary(g => g.Key, g => g.Count());
    }
}
