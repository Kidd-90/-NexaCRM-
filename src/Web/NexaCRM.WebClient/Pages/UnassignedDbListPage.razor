@page "/db/distribution/unassigned"
@attribute [Authorize(Roles = "Manager")]

@using NexaCRM.WebClient.Models.Db
@using NexaCRM.WebClient.Services.Interfaces

@inject IDbDataService DbDataService
@inject NavigationManager NavigationManager

<div class="container-fluid mt-4">
    <h1 class="mb-4">미분배 DB 목록</h1>
    <p class="text-muted mb-4">아직 담당자에게 할당되지 않은 DB 목록입니다. 여기서 DB를 분배할 수 있습니다.</p>

    @if (customers == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-light">
                    <tr>
                        <th>고객명</th>
                        <th>연락처</th>
                        <th>DB 상태</th>
                        <th>액션</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var customer in customers)
                    {
                        <tr>
                            <td>@customer.CustomerName</td>
                            <td>@customer.ContactNumber</td>
                            <td>@customer.Status</td>
                            <td>
                                <button class="btn btn-primary btn-sm btn-assign" @onclick="() => NavigateToAssign(customer.ContactId)">분배하기</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private IEnumerable<DbCustomer> customers;

    protected override async Task OnInitializedAsync()
    {
        customers = await DbDataService.GetUnassignedDbListAsync();
    }

    private void NavigateToAssign(int contactId)
    {
        NavigationManager.NavigateTo($"/db/distribution/assign/{contactId}");
    }
}
