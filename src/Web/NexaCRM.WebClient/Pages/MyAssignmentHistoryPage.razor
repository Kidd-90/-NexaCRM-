@page "/db/distribution/my-history"
@attribute [Authorize(Roles = "Sales")]

@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using NexaCRM.WebClient.Models.Db
@using NexaCRM.WebClient.Services.Interfaces
@using Microsoft.Extensions.Localization
@inject IDbDataService DbDataService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IStringLocalizer<DbStatus> StatusLocalizer

<div class="container-fluid mt-4">
    <h1 class="mb-4">내 분배 이력</h1>
    <p class="text-muted mb-4">과거에 내가 분배받았던 DB 전체 내역입니다.</p>

    @if (customers == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <!-- Desktop View -->
        <div class="table-responsive desktop-table-view">
            <table class="table table-striped table-hover">
                <thead class="table-light">
                    <tr>
                        <th>고객명</th>
                        <th>연락처</th>
                        <th>분배일</th>
                        <th>DB 상태</th>
                        <th>전달자</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var customer in customers)
                    {
                        <tr @onclick="() => NavigateToContact(customer.ContactId)">
                            <td>@customer.CustomerName</td>
                            <td>@customer.ContactNumber</td>
                            <td>@customer.AssignedDate.ToShortDateString()</td>
                            <td>@StatusLocalizer[customer.Status.ToString()]</td>
                            <td>@customer.Assigner</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Mobile View -->
        <div class="mobile-card-view">
            @foreach (var customer in customers)
            {
                <div class="customer-card" @onclick="() => NavigateToContact(customer.ContactId)">
                    <h5>@customer.CustomerName</h5>
                    <div class="card-info-row">
                        <span class="card-info-label">연락처</span>
                        <span class="card-info-value">@customer.ContactNumber</span>
                    </div>
                    <div class="card-info-row">
                        <span class="card-info-label">분배일</span>
                        <span class="card-info-value">@customer.AssignedDate.ToShortDateString()</span>
                    </div>
                    <div class="card-info-row">
                        <span class="card-info-label">DB 상태</span>
                        <span class="card-info-value">@StatusLocalizer[customer.Status.ToString()]</span>
                    </div>
                    <div class="card-info-row">
                        <span class="card-info-label">전달자</span>
                        <span class="card-info-value">@customer.Assigner</span>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private IEnumerable<DbCustomer>? customers;
    private ClaimsPrincipal? user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;
        // In a real app, you'd use user.Identity.Name, but for mock, we hardcode it.
        var agentName = "이영업";
        customers = await DbDataService.GetMyAssignmentHistoryAsync(agentName);
    }

    private void NavigateToContact(int contactId)
    {
        NavigationManager.NavigateTo($"/contacts/{contactId}");
    }
}
