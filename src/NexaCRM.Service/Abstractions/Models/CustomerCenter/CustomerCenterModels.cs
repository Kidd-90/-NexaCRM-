namespace NexaCRM.Services.Admin.Models.CustomerCenter;

using System;
using System.ComponentModel.DataAnnotations;

/// <summary>
/// Represents a tenant scoped customer notice rendered on the customer center.
/// </summary>
public sealed record Notice
{
    /// <summary>
    /// Database identifier generated by Supabase/Postgres sequences.
    /// </summary>
    public long Id { get; init; }

    /// <summary>
    /// Headline displayed in the notice list and detail panel.
    /// </summary>
    public string Title { get; init; } = string.Empty;

    /// <summary>
    /// Short description used in list summaries and SEO snippets.
    /// </summary>
    public string Summary { get; init; } = string.Empty;

    /// <summary>
    /// Markdown or rich text body rendered in the detail panel.
    /// </summary>
    public string Content { get; init; } = string.Empty;

    /// <summary>
    /// Semantic grouping used for filtering chips (e.g., Maintenance, Update).
    /// </summary>
    public NoticeCategory Category { get; init; } = NoticeCategory.General;

    /// <summary>
    /// Visual priority indicator rendered as a badge.
    /// </summary>
    public NoticeImportance Importance { get; init; } = NoticeImportance.Normal;

    /// <summary>
    /// Publish timestamp displayed in the list and used for ordering.
    /// </summary>
    public DateTimeOffset PublishedAt { get; init; } = DateTimeOffset.UtcNow;

    /// <summary>
    /// Indicates whether the notice should be highlighted at the top of the list.
    /// </summary>
    public bool IsPinned { get; init; }

    /// <summary>
    /// Optional link to additional resources or landing pages.
    /// </summary>
    public string? ReferenceUrl { get; init; }

    /// <summary>
    /// Tenant scope identifier. Null indicates a global notice.
    /// </summary>
    public Guid? TenantId { get; init; }
}

public enum NoticeCategory
{
    General,
    Update,
    Maintenance,
    Security,
    Policy,
    Promotion
}

public enum NoticeImportance
{
    Normal,
    Highlight,
    Critical
}

public class FaqItem
{
    public long Id { get; set; }

    [Required, MaxLength(100)]
    public string Category { get; set; } = string.Empty;

    [Required, MaxLength(200)]
    public string Question { get; set; } = string.Empty;

    [Required, MaxLength(2000)]
    public string Answer { get; set; } = string.Empty;

    public int Order { get; set; }
}

